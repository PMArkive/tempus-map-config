{"version":3,"sources":["api/tempus.js","components/config.js","App.js","index.js"],"names":["graphql","require","schema","tier","className","a","getMapList","mapList","filter","x","tiers","result","errors","data","maps","Config","props","length","createConfig","keybind","playerClass","date","useRcon","config","name","i","nextMap","App","onSubmit","state","isLoading","setState","getMaps","form_tier","form_playerClass","then","prevState","form_keybind","form_useRcon","Date","now","toISOString","Form","Group","controlid","Label","Control","as","value","this","onChange","e","target","Number","type","Text","label","Button","variant","size","onClick","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56857641.chunk.js","sourcesContent":["const { graphql } = require(\"graphql\");\nconst { schema } = require(\"tempus-api-graphql\");\n\nexport async function getMaps(tier, className) {\n  let mapList = await getMapList();\n  return mapList.filter((x) => x.tiers[className] === tier);\n}\n\nasync function getMapList() {\n  const query = `\n    {\n      maps\n      {\n        name\n        tiers {\n          soldier\n          demoman\n        }\n      }\n    }\n  `;\n\n  const result = await graphql(schema, query);\n  if (result.errors) {\n    throw result.errors[0];\n  }\n  return result.data.maps;\n}\n","import React from \"react\";\n\nimport \"./config.css\";\n\nexport default function Config(props) {\n  if (props.maps.length <= 0) return null;\n\n  return (\n    <pre className={props.className}>\n      <p className=\"config-display\">\n        <code>\n          {createConfig(\n            props.maps,\n            props.keybind,\n            props.tier,\n            props.playerClass,\n            props.date,\n            props.useRcon\n          )}\n        </code>\n      </p>\n    </pre>\n  );\n}\n\nfunction createConfig(maps, keybind, tier, playerClass, date, useRcon) {\n  let config = \"\";\n\n  config += `// Tempus ${playerClass} tier ${tier} speedrun config\\n`;\n  config += `// Created ${date}\\n`;\n  config += \"// https://laurirasanen.github.io/tempus-map-config\\n\";\n  config += `// Starting map: ${maps[0].name}\\n\\n`;\n\n  config += `bind ${keybind} tmps-map-1\\n\\n`;\n\n  for (let i = 0; i < maps.length; i++) {\n    let nextMap = i + 1;\n    if (i >= maps.length - 1) {\n      nextMap = 0;\n    }\n\n    config += `alias tmps-map-${i} \"bind ${keybind} tmps-map-${nextMap};${\n      useRcon ? \" rcon\" : \"\"\n    } changelevel ${maps[i].name}\"\\n`;\n  }\n\n  return config;\n}\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { getMaps } from \"./api/tempus\";\nimport Config from \"./components/config\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      maps: [],\n\n      playerClass: \"soldier\",\n      keybind: \"mouse5\",\n      tier: 1,\n      useRcon: false,\n      date: \"\",\n\n      // use separate values for form cos im lazy\n      // and it's easy\n      form_playerClass: \"soldier\",\n      form_keybind: \"mouse5\",\n      form_tier: 1,\n      form_useRcon: false,\n    };\n  }\n\n  onSubmit = () => {\n    if (this.state.isLoading) return;\n\n    this.setState({ isLoading: true }, () => {\n      getMaps(this.state.form_tier, this.state.form_playerClass).then(\n        (maps) => {\n          this.setState((prevState) => {\n            return {\n              maps: maps,\n              playerClass: prevState.form_playerClass,\n              keybind: prevState.form_keybind,\n              tier: prevState.form_tier,\n              useRcon: prevState.form_useRcon,\n              date: new Date(Date.now()).toISOString(),\n              isLoading: false,\n            };\n          });\n        }\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Form>\n            <Form.Group controlid=\"formClass\">\n              <Form.Label>Class</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={this.state.form_playerClass}\n                onChange={(e) => {\n                  this.setState({ form_playerClass: e.target.value });\n                }}\n              >\n                <option>soldier</option>\n                <option>demoman</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlid=\"formTier\">\n              <Form.Label>Tier</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={this.state.form_tier}\n                onChange={(e) => {\n                  this.setState({ form_tier: Number(e.target.value) });\n                }}\n              >\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n                <option>6</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlid=\"formKeybind\">\n              <Form.Label>Keybind</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={this.state.form_keybind}\n                onChange={(e) => {\n                  this.setState({ form_keybind: e.target.value });\n                }}\n              />\n              <Form.Text className=\"text-muted\">\n                The keybind you want to use for changing to the next map\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlid=\"formRcon\">\n              <Form.Label>Rcon</Form.Label>\n              <Form.Control\n                type=\"checkbox\"\n                label=\"Use rcon\"\n                value={this.state.form_useRcon}\n                onChange={(e) => {\n                  this.setState({ form_useRcon: e.target.value });\n                }}\n              />\n              <Form.Text className=\"text-muted\">\n                Should commands execute using rcon?\n              </Form.Text>\n            </Form.Group>\n\n            <Button\n              variant={this.state.isLoading ? \"secondary\" : \"primary\"}\n              size=\"lg\"\n              onClick={this.onSubmit}\n            >\n              Go\n            </Button>\n          </Form>\n\n          <Config\n            className=\"mt-5\"\n            maps={this.state.maps}\n            keybind={this.state.keybind}\n            tier={this.state.tier}\n            playerClass={this.state.playerClass}\n            date={this.state.date}\n            useRcon={this.state.useRcon}\n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}